% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/outputFunctions.R
\name{savePheno}
\alias{savePheno}
\title{Save final phenotype and phenotype components.}
\usage{
savePheno(simulatedData, directoryGeno, directoryPheno, format = ".csv",
  outstring = NULL, intercept_gemma = TRUE, verbose = TRUE)
}
\arguments{
\item{simulatedData}{named list of i) dataframe of proportion of variance 
explained for each component (varComponents), 
ii) a named list with the simulated phenotype components (phenoComponents), 
iii) a named list of parameters describing the model setup (setup) and iv) 
a named list of raw components (rawComponents) used for genetic effect 
simulation (genotypes and/or kinship); obtained from \link{runSimulation}}

\item{directoryGeno}{absolute path (no tilde expansion) to parent directory 
[string] where genotypes from simulations should be saved [needs user writing 
permission]}

\item{directoryPheno}{absolute path (no tilde expansion) to parent directory 
[string] where final phenotype and phenotype components from simulations 
should be saved [needs user writing permission]}

\item{format}{vector of format names [string] specifying the output format;
multiple output formats can be requested. Options are: plink, bimbam, 
snptest, csv or rds. For information on format see details. In order to 
save intermediate phenotype components, at least one of csv or rds need to 
be specified. plink/bimbam/snptest will only save final phenotype/genotype 
and covariate data.}

\item{outstring}{optional name [string] of subdirectory (in relation to 
directoryPheno/directoryGeno) to save set-up
independent simulation results}

\item{intercept_gemma}{[boolean] When modeling an intercept term in gemma, a 
column of 1's have to be appended to the covariate files. Set intercept_gemma
to TRUE to include a column of 1's in the output.}

\item{verbose}{[boolean]; if TRUE, progress info is printed to standard out}
}
\value{
list of paths [strings] to final output phenotype (directoryPheno) 
and genotype (directoryGeno) directories. If outstring or subset settings not
NULL, these directories will be subdirectories of the input phenotype and 
genotype directories.
}
\description{
savePheno saves model setup parameters and simulated genotypes to the 
specified directories. Requires a simulatedData list which is the output of 
\link{runSimulation} .
}
\examples{
simulatedPhenotype <- runSimulation(N=100, P=5, cNrSNP=10,
genVar=0.2, h2s=0.2, phi=1)
#not run
#outputdir <- savePheno(simulatedPhenotype, directoryGeno="/path/to/dir/",  
#directoryPheno="/path/to/dir/", outstring="Data_simulation", 
#format=c("csv", "plink"))
}
